name: vpc-ci-dev-create
on:
  workflow_dispatch
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - "iac/terraform/vpc/*"
  #     - "iac/terraform/vpc/dev/**"
defaults:
  run:
    shell: bash
    working-directory: ./002
permissions:
  contents: read
jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint. New
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: Configure GCP credentials
        id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          # Value from command: gcloud iam workload-identity-pools providers describe github-actions --workload-identity-pool="github-actions-pool" --location="global"
          workload_identity_provider: "projects/287702920783/locations/global/workloadIdentityPools/terra-pool/providers/terra-provider"
          create_credentials_file: true
          service_account: "terra-510@advance-terraform-406410.iam.gserviceaccount.com"
          #token_format: "access_token"
          #access_token_lifetime: "120s"
          audience: "//iam.googleapis.com/projects/287702920783/locations/global/workloadIdentityPools/terra-pool/providers/terra-provider"
      - name: Echo stuff
        run: printenv
      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: 1.4.6
      - name: Terraform format
        id: fmt
        run: terraform fmt -check
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform validate
        id: validate
        run: terraform validate
      - name: Terraform plan
        id: plan
        run: terraform plan -var-file=./dev/terraform.tfvars -no-color -input=false
        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        run: terraform apply -var-file=./dev/terraform.tfvars -auto-approve -input=false